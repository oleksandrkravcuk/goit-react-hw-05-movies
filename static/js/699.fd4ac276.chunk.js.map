{"version":3,"file":"static/js/699.fd4ac276.chunk.js","mappings":"0NACA,EAA4B,0BAA5B,EAAkE,0BAAlE,EAA4G,8BAA5G,EAAuL,qBAAvL,EAAoN,sBAApN,EAAyP,6B,SC8FzP,EAxFe,WACb,IAAAA,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0BC,EAAAA,EAAAA,UAASH,EAAaI,IAAI,UAAY,IAAGC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAA5DI,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MACXC,EAAQd,EAAaI,IAAI,UAAY,IAwB3CW,EAAAA,EAAAA,YAAU,WACHD,GAILE,EAAiBF,GACdG,MAAK,SAAAC,GACJ,GAA2B,IAAvBA,EAAKC,cACP,OAAOC,MAAM,yCAADC,OAA0CP,EAAK,MAG7DH,EAASO,EAAKI,QAChB,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,yBAA0BA,EAAM,GAClE,GAAG,CAACV,IAEJ,IAAME,EAAmB,SAACF,GACxB,OAAOY,MAAM,qDAADL,OAhDD,mCAgD6D,WAAAA,OAAUP,IAC/EG,MAAK,SAAAU,GAAQ,OAAIA,EAASC,MAAM,GACrC,EAOA,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAaE,SAAU,SAACC,GAAQA,EAAEC,iBAjDrDlC,EAAgB,CAAEa,MAAOR,IAEpBA,EAKLU,EAAiBV,GACdW,MAAK,SAAAC,GACJ,GAA2B,IAAvBA,EAAKC,cACP,OAAOC,MAAM,yCAADC,OAA0Cf,EAAK,MAG7DK,EAASO,EAAKI,QAChB,IACCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,yBAA0BA,GACxCb,EAAS,GACX,IAfAA,EAAS,GA8C4E,EAAEqB,SAAA,EACvFI,EAAAA,EAAAA,KAAA,SACIC,KAAK,YACLP,UAAWC,EACXO,KAAK,OACLhC,MAAOA,EACPiC,SAbkB,SAACL,GACzB3B,EAAS2B,EAAEM,OAAOlC,MACpB,EAYQmC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEdP,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASR,UAAWC,EAAoBC,UACnDI,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,gBAGTtB,EAAMkC,OAAS,IACdR,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAiBC,SAC7BtB,EAAMmC,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAE,OACvBZ,EAAAA,EAAAA,KAAA,MAAaN,UAAWC,EAAqBC,UAC3CI,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAE,WAAA7B,OAAa2B,GAAMG,MAAO,CAAEC,KAAMxC,GAAWoB,SAClDe,KAFIC,EAIJ,QAOf,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__JDaLY\",\"movieList\":\"Search_movieList__Rr3Hv\",\"movieListItem\":\"Search_movieListItem__j6mDz\",\"movieLink\":\"Search_movieLink__p9aGv\",\"form\":\"Search_form__KGT+E\",\"input\":\"Search_input__PXR0c\",\"searchButton\":\"Search_searchButton__8Jp1t\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport styles from './Search.module.css';\n\n\nconst apiKey = 'eed14fd55202ee0e89c15a259f6aa876';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState(searchParams.get('query') || '');\n  const [files, setFiles] = useState([]);\n  const location = useLocation();\n  const query = searchParams.get('query') || '';\n\n  const handleSearch = () => {\n    setSearchParams({ query: value });\n\n    if (!value) {\n      setFiles([]); \n      return;\n    }\n\n    fetchSearchMovie(value)\n      .then(info => {\n        if (info.total_results === 0) {\n          return alert(`Sorry, we didn't find any results for ${value}.`);\n        }\n\n        setFiles(info.results);\n      })\n      .catch(error => {\n        console.error('Error fetching movies:', error);\n        setFiles([]); \n      });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchSearchMovie(query)\n      .then(info => {\n        if (info.total_results === 0) {\n          return alert(`Sorry, we didn't find any results for ${query}.`);\n        }\n\n        setFiles(info.results);\n      })\n      .catch(error => console.error('Error fetching movies:', error));\n  }, [query, ]);\n\n  const fetchSearchMovie = (query) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n      .then(response => response.json());\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={(e) => { e.preventDefault(); handleSearch(); }}>\n      <input\n          name=\"inputData\"\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange= {handleInputChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\" className={styles.searchButton}>\n          <span>Search</span>\n        </button>\n      </form>\n      {files.length > 0 && (\n        <ul className={styles.movieList}>\n          {files.map(({ title, id }) => (\n          <li key={id} className={styles.movieListItem}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","_useState2","value","setValue","_useState3","_useState4","files","setFiles","location","useLocation","query","useEffect","fetchSearchMovie","then","info","total_results","alert","concat","results","catch","error","console","fetch","response","json","_jsxs","className","styles","children","onSubmit","e","preventDefault","_jsx","name","type","onChange","target","autoComplete","autoFocus","placeholder","length","map","_ref","title","id","Link","to","state","from"],"sourceRoot":""}